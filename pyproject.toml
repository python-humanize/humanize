[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "humanize"
description = "Python humanize utilities"
readme = "README.md"
keywords = [
  "humanize time size",
]
license = {text = "MIT"}
maintainers = [{name = "Hugo van Kemenade"}]
authors = [{name = "Jason Moiron", email = "jmoiron@jmoiron.net"}]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Text Processing",
  "Topic :: Text Processing :: General",
]
dynamic = [
  "version",
]
[project.optional-dependencies]
tests = [
  "freezegun",
  "pytest",
  "pytest-cov",
]
[project.urls]
Documentation = "https://humanize.readthedocs.io/"
Funding = "https://tidelift.com/subscription/pkg/pypi-humanize?utm_source=pypi-humanize&utm_medium=pypi"
Homepage = "https://github.com/python-humanize/humanize"
"Issue tracker" = "https://github.com/python-humanize/humanize/issues"
"Release notes" = "https://github.com/python-humanize/humanize/releases"
Source = "https://github.com/python-humanize/humanize"
[project.scripts]
humanize = "humanize.cli.main:main"

[tool.hatch]
version.source = "vcs"

[tool.hatch.build]
artifacts = [
  "*.mo",
]

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.ruff]
fix = true

[tool.ruff.lint]
select = [
  "C4", # flake8-comprehensions
  "D", # pydocstyle
  "E", # pycodestyle errors
  "EM", # flake8-errmsg
  "F", # pyflakes errors
  "I", # isort
  "ISC", # flake8-implicit-str-concat
  "LOG", # flake8-logging
  "PGH", # pygrep-hooks
  "RUF100", # unused noqa (yesqa)
  "UP", # pyupgrade
  "W", # pycodestyle warnings
  "YTT", # flake8-2020
]
extend-ignore = [
  "E203", # Whitespace before ':'
  "E221", # Multiple spaces before operator
  "E226", # Missing whitespace around arithmetic operator
  "E241", # Multiple spaces after ','
]

[tool.ruff.lint.isort]
known-first-party = ["humanize"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"src/humanize/cli/argutils.py" = ["UP006"]

[tool.pytest.ini_options]
addopts = "--color=yes"
filterwarnings = [
  "error",
  # https://github.com/dateutil/dateutil/issues/1314
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:dateutil.tz.tz",
  # Python <= 3.11
  "ignore:sys.monitoring isn't available, using default core:coverage.exceptions.CoverageWarning",
]
